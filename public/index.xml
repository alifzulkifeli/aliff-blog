<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aliff - Blog</title>
    <link>https://aliff-blog.vercel.app/</link>
    <description>Recent content on Aliff - Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© Aliff</copyright>
    <lastBuildDate>Sat, 11 Nov 2023 21:21:25 +0800</lastBuildDate><atom:link href="https://aliff-blog.vercel.app/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mastering API Endpoints with Next.js 13: A Guide to GET and POST Requests</title>
      <link>https://aliff-blog.vercel.app/posts/route-handlers-nextjs13/</link>
      <pubDate>Sat, 11 Nov 2023 21:21:25 +0800</pubDate>
      
      <guid>https://aliff-blog.vercel.app/posts/route-handlers-nextjs13/</guid>
      <description>Next.js 13 introduces exciting capabilities for building robust API endpoints. In this post, we&amp;rsquo;ll delve into the practical aspects of creating both GET and POST requests. Whether you&amp;rsquo;re new to Next.js or looking to update your skills with the latest version, this guide will help you understand and implement these essential features.
Creating a GET Request Here&amp;rsquo;s a simple example of setting up a GET request:
export async function GET() { return new Response(&amp;#39;Hi&amp;#39;) } This function demonstrates the ease with which you can return a basic response.</description>
    </item>
    
    <item>
      <title>App Routing in Next.js 13: Dynamic Routes Simplified</title>
      <link>https://aliff-blog.vercel.app/posts/app-router/</link>
      <pubDate>Thu, 09 Nov 2023 22:22:24 +0800</pubDate>
      
      <guid>https://aliff-blog.vercel.app/posts/app-router/</guid>
      <description>Next.js, a popular React framework, is well-known for its efficiency in building server-rendered applications. One of its powerful features is the file system-based routing mechanism. In this blog post, we&amp;rsquo;ll explore how to implement dynamic routing in Next.js 13, covering both server-side and client-side approaches.
Dynamic Routing in Server-Side Dynamic routing is a pivotal feature in modern web applications, allowing URLs to be flexibly handled. In Next.js, dynamic routes are defined using file names in square brackets.</description>
    </item>
    
    <item>
      <title>What&#39;s New in Next 13</title>
      <link>https://aliff-blog.vercel.app/posts/whats-new-in-next-13/</link>
      <pubDate>Wed, 08 Nov 2023 21:27:53 +0800</pubDate>
      
      <guid>https://aliff-blog.vercel.app/posts/whats-new-in-next-13/</guid>
      <description>Create new next project using typescript npx create-next-app@latest --ts app-name Basic URL structure about -&amp;gt; example/about [slug] -&amp;gt; example/{slug} (group_name) -&amp;gt; example Layout layout only will be implemented on the current sub directory a good place to do data fetching All is Server Component since next13, all compponent is server component by default. So it will be cache if the url is not dynamic, to prevent this can use below way:</description>
    </item>
    
    <item>
      <title>Aliff Aiman</title>
      <link>https://aliff-blog.vercel.app/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aliff-blog.vercel.app/about/</guid>
      <description>About During my childhood, a single YouTube tutorial on HTML manipulation ignited my passion for programming. This discovery led me to pursue a degree in Computer Science, where I delved deeper into software development, programming concepts, and computer architecture. Along my educational journey, I have gained proficiency in renowned frameworks such as React.js and Flask, amongst others.
Personal Information Name: Muhammad Aliff Aiman Bin Zolkifeli Degree: Bachelor&amp;rsquo;s Degree in Computer Science Email: alifzulkifeli@gmail.</description>
    </item>
    
  </channel>
</rss>
